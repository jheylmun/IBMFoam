/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  dev                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

D           0.004;
ptsPerD     30;

nDvert      2.5;
nDup        2.5;
nDdown      2.5;

xCenter     0.0;
xMin        #calc "$xCenter-$D*$nDup";
xMax        #calc "$xCenter+$D*$nDdown";
nXup        #calc "$nDup*$ptsPerD";
nXdown      #calc "$nDdown*$ptsPerD";
nX          #calc "$nXup+$nXdown";


vertices
(
    ($xMin      $xMin       $xMin)
    ($xMax      $xMin       $xMin)
    ($xMax      $xMax       $xMin)
    ($xMin      $xMax       $xMin)

    ($xMin      $xMin       $xMax)
    ($xMax      $xMin       $xMax)
    ($xMax      $xMax       $xMax)
    ($xMin      $xMax       $xMax)
);

blocks
(
    hex (0 1 2 3 4 5 6 7) ($nX $nX $nX) simpleGrading (1 1 1)

//     hex (0 1 8 7 9 10 17 16) ($nXup $nY $nz)
//         simpleGrading (1 1 1)//($xUpRatio2 $yRatio2 $nz)
//
//     hex (1 2 3 8 10 11 12 17) ($nXdown $nY $nz)
//         simpleGrading (1 1 1)//($xDownRatio1 $yRatio2 $nz)
//
//     hex (8 3 4 5 17 12 13 14) ($nXdown $nY $nz)
//         simpleGrading (1 1 1)//($xDownRatio1 $yRatio1 $nz)
//
//     hex (7 8 5 6 16 17 14 15) ($nXup $nY $nz)
//         simpleGrading (1 1 1)//($xUpRatio2 $yRatio1 $nz)
);

edges
(
);

boundary
(
    inlet
    {
        type cyclic;
        neighbourPatch outlet;
        faces
        (
//             (7 0 9 16)
//             (6 7 16 15)
            (0 3 7 4)
        );
    }
    outlet
    {
        type cyclic;
        neighbourPatch inlet;
        faces
        (
//             (2 3 12 11)
//             (3 4 13 12)
            (1 2 6 5)
        );
    }
    freestream1
    {
        type cyclic;
        neighbourPatch freestream2;
        faces
        (
//             (6 5 14 15)
//             (4 5 14 13)
            (0 1 5 4)
        );
    }
    freestream2
    {
        type cyclic;
        neighbourPatch freestream1;
        faces
        (
//             (0 1 10 9)
//             (1 2 11 10)
            (3 2 6 7)
        );
    }
    freestream3
    {
        type cyclic;
        neighbourPatch freestream4;
        faces
        (
//             (0 1 8 7)
//             (1 2 3 8)
//             (7 8 5 6)
//             (8 3 4 5)
            (0 1 2 3)
        );
    }
    freestream4
    {
        type cyclic;
        neighbourPatch freestream3;
        faces
        (
//             (10 9 16 17)
//             (11 10 17 12)
//             (17 16 15 14)
//             (12 17 14 13)
            (4 5 6 7)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
